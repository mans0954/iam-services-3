package org.openiam.idm.srvc.user.dto;

// Generated Jun 12, 2007 10:46:13 PM by Hibernate Tools 3.2.0.beta8

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import java.util.Date;
import org.hibernate.annotations.GenericGenerator;


/**
 * UserNote generated by hbm2java
 */

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "userNote", propOrder = {
        "createDate",
        "createdBy",
        "description",
        "noteType",
        "userId",
        "userNoteId"
})
@Entity
@Table(name = "USER_NOTE")
public class UserNote implements java.io.Serializable {

    // Fields
    @Id
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid")
    @Column(name = "USER_NOTE_ID", length = 32, nullable = false)
    protected String userNoteId;

    @XmlSchemaType(name = "dateTime")
    @Column(name="CREATE_DATE", length=19)
    protected Date createDate;

    @Column(name="CREATED_BY", length=20)
    protected String createdBy;

    @Column(name="DESCRIPTION", length=1000)
    protected String description;

    @Column(name="NOTE_TYPE", length=20)
    protected String noteType;

    @XmlTransient
    @ManyToOne
    @JoinColumn(name="USER_ID")
    protected User user;

    @Transient
    protected String userId;
    // Constructors

    /**
     * default constructor
     */
    public UserNote() {
    }

    /**
     * minimal constructor
     */
    public UserNote(String userNoteId) {
        this.userNoteId = userNoteId;

        createDate = new Date(System.currentTimeMillis());

    }

    /**
     * full constructor
     */
    public UserNote(String userNoteId, String users, String noteType,
                    String description, Date createDate, String createdBy) {
        this.userNoteId = userNoteId;
        this.userId = users;
        this.noteType = noteType;
        this.description = description;
        if (createDate == null) {
            this.createDate = new Date(System.currentTimeMillis());
        } else {
            this.createDate = createDate;
        }
        this.createdBy = createdBy;
    }

    // Property accessors
    public String getUserNoteId() {
        return this.userNoteId;
    }

    public void setUserNoteId(String userNoteId) {
        this.userNoteId = userNoteId;
    }

    public String getUserId() {
        return user != null ? user.getUserId() : "";
    }

    public String getNoteType() {
        return this.noteType;
    }

    public void setNoteType(String noteType) {
        this.noteType = noteType;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
        this.userId = user != null ? user.getUserId() : "";
    }
}
