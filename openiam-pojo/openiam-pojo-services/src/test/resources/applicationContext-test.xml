<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <context:annotation-config/>

    <context:component-scan base-package="org.openiam.idm.srvc.user.service"/>
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>
                <value>file:/data/openiam/conf/datasource.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.connection.isolation">2</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.connection.driver_class">org.hsqldb.jdbcDriver</prop>
                <prop key="hibernate.connection.url">jdbc:hsqldb:mem:testdb;ignorecase=true;get_column_name=true</prop>
                <prop key="hibernate.connection.username">SA</prop>
                <prop key="hibernate.connection.password"/>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>org/openiam/idm/srvc/grp/service/Group.hbm.xml</value>
                <value>org/openiam/idm/srvc/grp/service/GroupAttribute.hbm.xml</value>
                <value>org/openiam/idm/srvc/grp/service/UserGroup.hbm.xml</value>
                <value>org/openiam/idm/srvc/role/service/Role.hbm.xml</value>
                <value>org/openiam/idm/srvc/role/service/RoleAttribute.hbm.xml</value>
                <value>org/openiam/idm/srvc/role/service/UserRole.hbm.xml</value>
                <value>org/openiam/idm/srvc/role/service/RolePolicy.hbm.xml</value>
            </list>
        </property>
        <property name="packagesToScan" value="org.openiam.core.domain*,
											   org.openiam.idm.srvc.grp.dto*,
											   org.openiam.idm.srvc.res.dto*,
											   org.openiam.idm.srvc.role.dto*,
											   org.openiam.idm.srvc.user.dto*,
											   org.openiam.idm.srvc.continfo.dto*,
											   org.openiam.am.srvc.resattr.domain*,
											   org.openiam.idm.srvc.org.dto*"/>
    </bean>

    <!--tx begin-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="userDAO" class="org.openiam.idm.srvc.user.service.UserDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="seqGenDao" ref="seqGenDAO"/>
        <property name="emailSearchVal" value="EMAIL1"/>
        <property name="phoneSearchVal" value="Desk Phone"/>
        <property name="maxResultSetSize" value="${fetch.size}"/>
        <property name="dbType" value="${openiam.dbType}"/>
    </bean>

    <bean id="userAttributeDAO" class="org.openiam.idm.srvc.user.service.UserAttributeDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userNoteDAO" class="org.openiam.idm.srvc.user.service.UserNoteDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="addressDAO" class="org.openiam.idm.srvc.continfo.service.AddressDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="emailAddressDAO" class="org.openiam.idm.srvc.continfo.service.EmailAddressDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="phoneDAO" class="org.openiam.idm.srvc.continfo.service.PhoneDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="supervisorDAO" class="org.openiam.idm.srvc.user.service.SupervisorDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="seqGenDAO" class="org.openiam.base.id.SequenceGenDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

	<bean id="orgAttrDAO" class="org.openiam.idm.srvc.org.service.OrganizationAttributeDAOImpl" >
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="orgDAO" class="org.openiam.idm.srvc.org.service.OrganizationDAOImpl" >
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
</beans>