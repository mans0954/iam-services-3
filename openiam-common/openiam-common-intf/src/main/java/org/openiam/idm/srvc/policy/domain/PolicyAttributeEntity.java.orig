package org.openiam.idm.srvc.policy.domain;

<<<<<<< HEAD
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
=======
import javax.persistence.*;
>>>>>>> master

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;
import org.openiam.base.domain.AbstractKeyNameEntity;
import org.openiam.dozer.DozerDTOCorrespondence;
import org.openiam.idm.srvc.policy.dto.PolicyAttribute;
import org.openiam.idm.srvc.res.domain.ResourceEntity;

/**
 * @author zaporozhec
 */

/**
 * PolicyAttribute is used to add additional attributes to a policy object.
 */
@Entity
@Table(name = "POLICY_ATTRIBUTE")
@DozerDTOCorrespondence(PolicyAttribute.class)
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@AttributeOverrides({
	@AttributeOverride(name = "id", column = @Column(name = "POLICY_ATTR_ID")),
	@AttributeOverride(name = "name", column = @Column(name = "NAME", length = 100))
})
public class PolicyAttributeEntity extends AbstractKeyNameEntity {

    private static final long serialVersionUID = -291717117636794761L;
<<<<<<< HEAD
    
    @ManyToOne(cascade={CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
    @JoinColumn(name = "POLICY_ID", referencedColumnName = "POLICY_ID", insertable = true, updatable = false)
    private PolicyEntity policy;
	
	@ManyToOne(fetch = FetchType.LAZY,cascade={CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
    @JoinColumn(name="DEF_PARAM_ID", referencedColumnName = "DEF_PARAM_ID", insertable = true, updatable = true, nullable=true)
	private PolicyDefParamEntity defParam;
	
	@Column(name = "OPERATION", length = 20)
	private String operation;
	@Column(name = "VALUE1", length = 4096)
	private String value1;
	@Column(name = "VALUE2", length = 4096)
	private String value2;
	
	@Column(name = "REQUIRED")
=======

    @Id
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid")
    @Column(name = "POLICY_ATTR_ID", length = 32, nullable = false, updatable = false)
    private String policyAttrId;
    @Column(name = "POLICY_ID", nullable = false, updatable = false)
    private String policyId;

    @ManyToOne(cascade = {CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH}, fetch = FetchType.LAZY)
    @JoinColumn(name = "DEF_PARAM_ID", insertable = true, updatable = true, nullable = true)
    private PolicyDefParamEntity defaultParametr;

    /**
     * Deprecated for Password Policy, got from PolicyDefParamEntity
     */
//    @Column(name = "NAME", length = 100)
//    private String name;

    /**
     * Deprecated for Password Policy, got from PolicyDefParamEntity
     */
//    @Column(name = "OPERATION", length = 20)
//    private String operation;

    @Column(name = "VALUE1", length = 2048)
    private String value1;
    @Column(name = "VALUE2", length = 2048)
    private String value2;

    @Column(name = "REQUIRED")
>>>>>>> master
    @Type(type = "yes_no")
    private boolean required = true;
	
	@Column(name = "RULE_TEXT")
	private String rule;
	
	public PolicyEntity getPolicy() {
		return policy;
	}

	public void setPolicy(PolicyEntity policy) {
		this.policy = policy;
	}

    public boolean isRequired() {
        return required;
    }

    public void setRequired(boolean required) {
        this.required = required;
    }

<<<<<<< HEAD
    public PolicyAttributeEntity() {
    }

    public String getOperation() {
        return this.operation;
    }

    public void setOperation(String operation) {
        this.operation = operation;
    }
=======
    @Column(name = "RULE_TEXT")
    private String rule;

    public PolicyAttributeEntity() {
    }

    public PolicyAttributeEntity(String policyAttrId) {
        this.policyAttrId = policyAttrId;
    }


    public String getPolicyAttrId() {
        return this.policyAttrId;
    }

    public void setPolicyAttrId(String policyAttrId) {
        this.policyAttrId = policyAttrId;
    }
//
//    public String getName() {
//        return this.name;
//    }
//
//    public void setName(String name) {
//        this.name = name;
//    }
//
//    public String getOperation() {
//        return this.operation;
//    }
//
//    public void setOperation(String operation) {
//        this.operation = operation;
//    }
>>>>>>> master

    public String getValue1() {
        return this.value1;
    }

    public void setValue1(String value1) {
        this.value1 = value1;
    }

    public String getValue2() {
        return this.value2;
    }

    public void setValue2(String value2) {
        this.value2 = value2;
    }

<<<<<<< HEAD
    public PolicyDefParamEntity getDefParam() {
		return defParam;
	}

	public void setDefParam(PolicyDefParamEntity defParam) {
		this.defParam = defParam;
	}

	public String getRule() {
=======
    public String getPolicyId() {
        return policyId;
    }

    public void setPolicyId(String policyId) {
        this.policyId = policyId;
    }

    public String getRule() {
>>>>>>> master
        return rule;
    }

    public void setRule(String rule) {
        this.rule = rule;
    }

<<<<<<< HEAD
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result
				+ ((defParam == null) ? 0 : defParam.hashCode());
		result = prime * result
				+ ((operation == null) ? 0 : operation.hashCode());
		result = prime * result + ((policy == null) ? 0 : policy.hashCode());
		result = prime * result + (required ? 1231 : 1237);
		result = prime * result + ((rule == null) ? 0 : rule.hashCode());
		result = prime * result + ((value1 == null) ? 0 : value1.hashCode());
		result = prime * result + ((value2 == null) ? 0 : value2.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		PolicyAttributeEntity other = (PolicyAttributeEntity) obj;
		if (defParam == null) {
			if (other.defParam != null)
				return false;
		} else if (!defParam.equals(other.defParam))
			return false;
		if (operation == null) {
			if (other.operation != null)
				return false;
		} else if (!operation.equals(other.operation))
			return false;
		if (policy == null) {
			if (other.policy != null)
				return false;
		} else if (!policy.equals(other.policy))
			return false;
		if (required != other.required)
			return false;
		if (rule == null) {
			if (other.rule != null)
				return false;
		} else if (!rule.equals(other.rule))
			return false;
		if (value1 == null) {
			if (other.value1 != null)
				return false;
		} else if (!value1.equals(other.value1))
			return false;
		if (value2 == null) {
			if (other.value2 != null)
				return false;
		} else if (!value2.equals(other.value2))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return String
				.format("PolicyAttributeEntity [policy=%s, defParam=%s, operation=%s, value1=%s, value2=%s, required=%s, rule=%s]",
						policy, defParam, operation, value1, value2,
						required, rule);
	}

    
=======
    public PolicyDefParamEntity getDefaultParametr() {
        return defaultParametr;
    }

    public void setDefaultParametr(PolicyDefParamEntity defaultParametr) {
        this.defaultParametr = defaultParametr;
    }


    public int compareTo(PolicyAttributeEntity o) {
        if (this.getDefaultParametr() == null && o.getDefaultParametr() == null)
            return 0;

        if (o == null || o.getDefaultParametr() == null || o.getDefaultParametr().getName() == null) {
            return Integer.MIN_VALUE;
        }
        return defaultParametr.getName().compareTo(o.getDefaultParametr().getName());
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        PolicyAttributeEntity that = (PolicyAttributeEntity) o;

        if (required != that.required) return false;
        if (defaultParametr != null ? !defaultParametr.equals(that.defaultParametr) : that.defaultParametr != null)
            return false;
        if (policyAttrId != null ? !policyAttrId.equals(that.policyAttrId) : that.policyAttrId != null) return false;
        if (policyId != null ? !policyId.equals(that.policyId) : that.policyId != null) return false;
        if (rule != null ? !rule.equals(that.rule) : that.rule != null) return false;
        if (value1 != null ? !value1.equals(that.value1) : that.value1 != null) return false;
        if (value2 != null ? !value2.equals(that.value2) : that.value2 != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = policyAttrId != null ? policyAttrId.hashCode() : 0;
        result = 31 * result + (policyId != null ? policyId.hashCode() : 0);
        result = 31 * result + (defaultParametr != null ? defaultParametr.hashCode() : 0);
        result = 31 * result + (value1 != null ? value1.hashCode() : 0);
        result = 31 * result + (value2 != null ? value2.hashCode() : 0);
        result = 31 * result + (required ? 1 : 0);
        result = 31 * result + (rule != null ? rule.hashCode() : 0);
        return result;
    }
>>>>>>> master
}
