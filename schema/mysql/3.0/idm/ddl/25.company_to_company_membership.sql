use openiam;


CREATE TABLE COMPANY_TO_COMPANY_MEMBERSHIP (
	COMPANY_ID varchar(32) NOT NULL,
	MEMBER_COMPANY_ID varchar(32) NOT NULL,
	CREATE_DATE TIMESTAMP NULL,
	UPDATE_DATE TIMESTAMP NULL,
	CREATED_BY varchar(32) NULL,
	UPDATED_BY varchar(32) NULL,
	UNIQUE(COMPANY_ID, MEMBER_COMPANY_ID),
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID ),
	FOREIGN KEY (MEMBER_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID )
)  Engine=InnoDB;

DELIMITER $$

CREATE TRIGGER ON_COMPANY_XREF_INSERT
BEFORE
INSERT ON COMPANY_TO_COMPANY_MEMBERSHIP
	FOR EACH ROW
	BEGIN
		SET NEW.CREATE_DATE = NOW();
		SET NEW.UPDATE_DATE = NOW();
	END$$

COMMIT;



DROP PROCEDURE IF EXISTS MIGRATE_COMPANY_MEMBERSHIP$$

CREATE PROCEDURE MIGRATE_COMPANY_MEMBERSHIP()
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE c_id, p_id VARCHAR(32);		
		DECLARE cur1 CURSOR FOR (SELECT COMPANY_ID, PARENT_ID FROM COMPANY WHERE PARENT_ID IS NOT NULL);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
		OPEN cur1;
		
		REPEAT 
			FETCH cur1 INTO c_id, p_id;
			IF (c_id IS NOT NULL AND p_id IS NOT NULL) THEN
				IF ((SELECT COMPANY_ID FROM COMPANY_TO_COMPANY_MEMBERSHIP WHERE COMPANY_ID=p_id AND MEMBER_COMPANY_ID=c_id) IS NULL) THEN
					IF((SELECT COMPANY_ID FROM COMPANY WHERE COMPANY_ID=c_id) IS NOT NULL) THEN
						IF((SELECT COMPANY_ID FROM COMPANY WHERE COMPANY_ID=p_id) IS NOT NULL) THEN
							INSERT INTO COMPANY_TO_COMPANY_MEMBERSHIP (COMPANY_ID, MEMBER_COMPANY_ID) VALUES(p_id, c_id);
						END IF;
					END IF;
				END IF;
			END IF;
		UNTIL done END REPEAT; 
				
		CLOSE cur1;
	END$$
DELIMITER ;

call MIGRATE_COMPANY_MEMBERSHIP();

DROP PROCEDURE MIGRATE_COMPANY_MEMBERSHIP;

COMMIT;