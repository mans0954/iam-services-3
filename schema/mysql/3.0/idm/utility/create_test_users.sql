use openiam;

DELETE FROM LOGIN WHERE LOGIN_ID LIKE '%STRESS%';
DELETE FROM USER_KEY WHERE USER_ID LIKE '%STRESS%';
DELETE FROM USERS WHERE USER_ID LIKE '%STRESS%';

DELIMITER $$

DROP PROCEDURE IF EXISTS createTestUsers$$

CREATE PROCEDURE createTestUsers(IN numUsers INT, IN pwd VARCHAR(255), IN userKey VARCHAR(255), IN token VARCHAR(255))
	BEGIN
		DECLARE cnt INT DEFAULT 0;
		DECLARE cnt_inner INT DEFAULT 0;
		DECLARE id VARCHAR(32);
		
		create_users : LOOP
			IF (cnt >= numUsers) THEN
				LEAVE create_users;
			END IF;
			
			SET id = concat("STRESS", cnt);
			INSERT INTO USERS (USER_ID, FIRST_NAME, LAST_NAME) VALUES(id, id, id);
			INSERT INTO LOGIN (LOGIN_ID, SERVICE_ID, LOGIN, MANAGED_SYS_ID, USER_ID, PASSWORD, FIRST_TIME_LOGIN, GRACE_PERIOD, PWD_EXP) 
						VALUES(id, 'USR_SEC_DOMAIN', id, '0', id, pwd, 0, '2015-05-16 02:03:17', '2015-05-16 02:03:17');
			INSERT INTO USER_KEY (USER_KEY_ID, USER_ID, NAME, KEY_VALUE) VALUES(concat(id, 'pwd'), id, 'password', userKey);
			INSERT INTO USER_KEY (USER_KEY_ID, USER_ID, NAME, KEY_VALUE) VALUES(concat(id, 'tkn'), id, 'token', token);
			
			SET cnt = cnt + 1;
		END LOOP create_users;
		
		SET cnt = 0;
	END$$
DELIMITER ;