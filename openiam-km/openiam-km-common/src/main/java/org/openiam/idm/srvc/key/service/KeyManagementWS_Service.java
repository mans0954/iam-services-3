
package org.openiam.idm.srvc.key.service;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "KeyManagementWS", targetNamespace = "urn:idm.openiam.org/srvc/key/service", wsdlLocation = "http://localhost:9080/openiam-esb/idmsrvc/KeyManagementWS?wsdl")
public class KeyManagementWS_Service
    extends Service
{

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE_NAME = new QName("urn:idm.openiam.org/srvc/key/service", "KeyManagementWS");
    private final static Logger logger = Logger.getLogger(org.openiam.idm.srvc.key.service.KeyManagementWS_Service.class.getName());

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            URL baseUrl;
            baseUrl = org.openiam.idm.srvc.key.service.KeyManagementWS_Service.class.getResource(".");
            url = new URL(baseUrl, "http://localhost:9080/openiam-esb/idmsrvc/KeyManagementWS?wsdl");
        } catch (MalformedURLException ex) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://localhost:9080/openiam-esb/idmsrvc/KeyManagementWS?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        WSDL_LOCATION = url;
    }

    public KeyManagementWS_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public KeyManagementWS_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE_NAME);
    }

    public KeyManagementWS_Service() {
        super(WSDL_LOCATION, SERVICE_NAME);
    }

    /**
     * 
     * @return
     *     returns KeyManagementWS
     */
    @WebEndpoint(name = "KeyManagementWSPort")
    public KeyManagementWS getKeyManagementWSPort() {
        return super.getPort(new QName("urn:idm.openiam.org/srvc/key/service", "KeyManagementWSPort"), KeyManagementWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns KeyManagementWS
     */
    @WebEndpoint(name = "KeyManagementWSPort")
    public KeyManagementWS getKeyManagementWSPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:idm.openiam.org/srvc/key/service", "KeyManagementWSPort"), KeyManagementWS.class, features);
    }

}
